// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Email {
  id             Int            @id @default(autoincrement())
  activationCode String         @unique
  email          String         @unique
  isActivated    Boolean        @default(false)
  expireAt       DateTime
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  ResourceOwner  ResourceOwner?
}

model ResourceOwner {
  id             Int              @id @default(autoincrement())
  email          Email?           @relation(fields: [emailId], references: [id])
  emailId        Int
  name           String
  phoneNumber    String
  gender         Gender           @default(NONE)
  password       String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Client         Client[]
  Code           Code[]
  authorizedApps AuthorisedApps[]
  Token          Token[]
}

model Client {
  id             Int              @id @default(autoincrement())
  clientId       String           @unique
  clientSecret   String
  name           String
  homePageUrl    String
  description    String
  redirectUri    String
  user           ResourceOwner    @relation(fields: [userId], references: [id])
  userId         Int
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Code           Code[]
  authorizedApps AuthorisedApps[]
  Token          Token[]
}

model Code {
  id          Int           @id @default(autoincrement())
  code        String        @unique
  scope       String?
  state       String?
  redirectUri String
  nonce       String?
  user        ResourceOwner @relation(fields: [userId], references: [id])
  userId      Int
  client      Client        @relation(fields: [clientId], references: [id])
  clientId    Int
  createdAt   DateTime      @default(now())
  expireAt    DateTime
}

model Token {
  accessToken String        @unique
  createdAt   DateTime      @default(now())
  expireAt    DateTime
  user        ResourceOwner @relation(fields: [userId], references: [id])
  userId      Int
  client      Client        @relation(fields: [clientId], references: [id])
  clientId    Int
  scope       String
}

model AuthorisedApps {
  client    Client        @relation(fields: [clientId], references: [id])
  clientId  Int
  user      ResourceOwner @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime      @default(now())

  @@id([clientId, userId])
}

enum Gender{
  NONE
  MALE
  FEMALE
}
